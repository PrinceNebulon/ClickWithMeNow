<UserControl x:Class="ININ.Alliances.CWMNAddin.view.BooleanToggle"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" Name="TheWindow"
             MinHeight="10" MinWidth="60"
             d:DesignHeight="28" d:DesignWidth="60">
    <Grid Background="{Binding ElementName=TheWindow, Path=BackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        
        <Grid Background="{Binding ElementName=TheWindow, Path=FalseBackgroundBrush}" 
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              Grid.Column="0"></Grid>
        <Grid Background="{Binding ElementName=TheWindow, Path=TrueBackgroundBrush}" 
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              Grid.Column="1"></Grid>

        <Label Grid.Column="0" Content="{Binding ElementName=TheWindow, Path=FalseText}" 
               Foreground="{Binding ElementName=TheWindow, Path=FalseTextBrush}"
               HorizontalAlignment="Center" VerticalAlignment="Center">
            <Label.Style>
                <Style TargetType="Label">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="Padding" Value="3" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=TheWindow, Path=Value}" Value="false">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>
        <Label Grid.Column="1" Content="{Binding ElementName=TheWindow, Path=TrueText}" 
               Foreground="{Binding ElementName=TheWindow, Path=TrueTextBrush}"
               HorizontalAlignment="Center" VerticalAlignment="Center">
            <Label.Style>
                <Style TargetType="Label">
                    <Setter Property="Padding" Value="3" />
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=TheWindow, Path=Value}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>

        <Button Grid.Column="0" Grid.ColumnSpan="2" Click="Button_OnClick">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
